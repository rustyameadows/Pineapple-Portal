<% provide :page_shell do %>
  <div class="event-layout">
    <%= render "events/sidebar_navigation", event: @event %>

    <div class="event-layout__main">
      <%= render "shared/flash" %>

      <section class="event-section calendar-grid">
        <header class="event-section__header calendar-grid__header">
          <div>
            <p class="event-section__eyebrow">Calendar Grid</p>
            <h1 class="event-section__title"><%= @view ? @view.name : @calendar.name %></h1>
            <p class="event-section__subtitle">
              Edit schedule details in a dense table. Times use <strong><%= calendar_timezone_label %></strong>.
            </p>
          </div>
          <div class="calendar-grid__header-actions">
            <%= link_to "Back to Calendar", return_path, class: "event-section__cta event-section__cta--secondary" %>
          </div>
        </header>

        <div class="calendar-grid__bulk" data-bulk-panel>
          <h2 class="calendar-grid__bulk-title">Bulk actions</h2>
          <%= form_with url: grid_bulk_path, method: :patch, local: true, html: { id: "calendar-grid-bulk-form", class: "calendar-grid__bulk-form" } do |form| %>
            <div class="calendar-grid__bulk-row">
              <%= form.label :bulk_action, "Action", class: "calendar-grid__bulk-label" %>
              <%= form.select :bulk_action,
                              options_for_select([
                                ["Set status", "set_status"],
                                ["Update lock state", "set_locked"],
                                ["Add tags", "add_tags"],
                                ["Remove tags", "remove_tags"]
                              ]),
                              {},
                              class: "calendar-grid__bulk-select" %>
            </div>

            <div class="calendar-grid__bulk-row" data-calendar-grid-bulk-target="status">
              <%= form.label :status, "Status", class: "calendar-grid__bulk-label" %>
              <%= form.select :status,
                              options_for_select(@statuses.map { |status| [status.humanize, status] }),
                              {},
                              class: "calendar-grid__bulk-select" %>
            </div>

            <div class="calendar-grid__bulk-row" data-calendar-grid-bulk-target="locked">
              <%= form.label :locked, "Lock state", class: "calendar-grid__bulk-label" %>
              <%= form.select :locked,
                              options_for_select([["Lock selected", true], ["Unlock selected", false]]),
                              {},
                              class: "calendar-grid__bulk-select" %>
            </div>

            <div class="calendar-grid__bulk-row" data-calendar-grid-bulk-target="tags">
              <%= form.label :tag_ids, "Tags", class: "calendar-grid__bulk-label" %>
              <%= hidden_field_tag "bulk[tag_ids][]", "", form: "calendar-grid-bulk-form", id: nil %>
              <%= select_tag "bulk[tag_ids][]",
                             options_from_collection_for_select(@tags, :id, :name),
                             multiple: true,
                             size: 4,
                             class: "calendar-grid__bulk-select calendar-grid__bulk-select--tags" %>
            </div>

            <div class="calendar-grid__bulk-actions">
              <%= form.submit "Apply", class: "event-section__cta" %>
            </div>

            <p class="calendar-grid__bulk-hint">Select rows with the checkboxes before applying a bulk action.</p>
          <% end %>
        </div>

        <% if @items.any? %>
          <div class="calendar-grid__table-wrapper">
            <table class="calendar-grid__table">
              <thead>
                <tr>
                  <th scope="col" class="calendar-grid__column--select">Select</th>
                  <th scope="col">Title</th>
                  <th scope="col">Start</th>
                  <th scope="col">Duration</th>
                  <th scope="col">Anchor</th>
                  <th scope="col">Relation</th>
                  <th scope="col">Status</th>
                  <th scope="col">Locked</th>
                  <th scope="col">Tags</th>
                  <th scope="col">Location</th>
                  <th scope="col">Vendor</th>
                  <th scope="col">Notes</th>
                  <th scope="col" class="calendar-grid__column--edit"></th>
                  <th scope="col" class="calendar-grid__column--actions"></th>
                </tr>
              </thead>
              <tbody>
                <% @items.each do |item| %>
                  <% form_id = dom_id(item, :grid_form) %>
                  <%= form_with model: item,
                                url: grid_item_path(item),
                                method: :patch,
                                local: true,
                                html: { id: form_id } do |form| %>
                  <% end %>
                  <tr class="calendar-grid__row <%= 'calendar-grid__row--locked' if item.locked? %>">
                    <td class="calendar-grid__cell calendar-grid__cell--select">
                      <%= check_box_tag "item_ids[]", item.id, false, form: "calendar-grid-bulk-form", class: "calendar-grid__select", data: { bulk_toggle: true } %>
                    </td>
                    <td class="calendar-grid__cell">
                      <%= text_field_tag "calendar_item[title]", item.title, form: form_id, class: "calendar-grid__input" %>
                    </td>
                    <td class="calendar-grid__cell">
                      <% start_value = item.starts_at&.in_time_zone(@timezone)&.strftime("%Y-%m-%dT%H:%M") %>
                      <% if item.absolute? %>
                        <%= text_field_tag "calendar_item[starts_at]", start_value, form: form_id, class: "calendar-grid__input", type: "datetime-local" %>
                      <% else %>
                        <%= text_field_tag "calendar_item[starts_at]", start_value, form: form_id, class: "calendar-grid__input", type: "datetime-local", disabled: true %>
                        <p class="calendar-grid__hint">Relative to <%= item.relative_anchor&.title || "—" %> (<%= item.relative_before? ? "before" : "after" %> <%= item.relative_offset_minutes %> min)</p>
                      <% end %>
                    </td>
                    <td class="calendar-grid__cell">
                      <%= number_field_tag "calendar_item[duration_minutes]",
                                           item.duration_minutes,
                                           form: form_id,
                                           class: "calendar-grid__input calendar-grid__input--mini",
                                           min: 0 %>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--anchor" data-anchor-cell>
                      <div class="calendar-grid__anchor">
                        <% anchor_label = @anchor_label_map[item.relative_anchor_id] %>
                        <%= tag.input type: "text",
                                      value: anchor_label,
                                      class: "calendar-grid__input calendar-grid__input--anchor",
                                      list: "calendar-grid-anchor-options",
                                      placeholder: "None",
                                      autocomplete: "off",
                                      data: { anchor_input: true },
                                      form: form_id,
                                      name: nil %>
                        <%= hidden_field_tag "calendar_item[relative_anchor_id]", item.relative_anchor_id, form: form_id, data: { anchor_hidden: true } %>
                        <button type="button" class="calendar-grid__anchor-clear" data-anchor-clear title="Clear anchor">×</button>
                      </div>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--relative" data-anchor-relation>
                      <div class="calendar-grid__relative" data-anchor-controls style="<%= item.relative_anchor_id.present? ? '' : 'display:none;' %>">
                        <%= select_tag "calendar_item[relative_alignment]",
                                       options_for_select(anchor_alignment_options, anchor_alignment_value(item)),
                                       form: form_id,
                                       class: "calendar-grid__select calendar-grid__select--alignment",
                                       data: { anchor_alignment: true } %>
                        <%= number_field_tag "calendar_item[relative_offset_minutes]",
                                             item.relative_offset_minutes,
                                             form: form_id,
                                             class: "calendar-grid__input calendar-grid__input--micro",
                                             min: 0,
                                             data: { anchor_offset: true } %>
                      </div>
                      <p class="calendar-grid__hint" data-anchor-hint style="<%= item.relative_anchor_id.present? ? 'display: none;' : '' %>">Select an anchor to enable offsets.</p>
                    </td>
                    <td class="calendar-grid__cell">
                      <%= select_tag "calendar_item[status]",
                                     options_for_select(@statuses.map { |status| [status.humanize, status] }, item.status),
                                     form: form_id,
                                     class: "calendar-grid__select" %>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--toggle">
                      <%= hidden_field_tag "calendar_item[locked]", "0", form: form_id, id: nil %>
                      <label class="calendar-grid__checkbox">
                        <%= check_box_tag "calendar_item[locked]", "1", item.locked?, form: form_id %>
                        <span>Locked</span>
                      </label>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--tags">
                      <%= hidden_field_tag "calendar_item[event_calendar_tag_ids][]", "", form: form_id, id: nil %>
                      <div class="calendar-grid__tags" data-tags-container>
                        <% @tags.each do |tag| %>
                          <% checked = item.event_calendar_tag_ids.include?(tag.id) %>
                          <label class="calendar-grid__tag-pill <%= 'calendar-grid__tag-pill--selected' if checked %>" style="<%= calendar_tag_style(tag) %>">
                            <%= check_box_tag "calendar_item[event_calendar_tag_ids][]", tag.id, checked, form: form_id, class: "calendar-grid__tag-checkbox" %>
                            <span class="calendar-grid__tag-color"></span>
                            <span class="calendar-grid__tag-label"><%= tag.name %></span>
                          </label>
                        <% end %>
                      </div>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--location">
                      <%= text_field_tag "calendar_item[location_name]", item.location_name, form: form_id, class: "calendar-grid__input" %>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--vendor">
                      <%= text_field_tag "calendar_item[vendor_name]", item.vendor_name, form: form_id, class: "calendar-grid__input" %>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--notes">
                      <%= text_area_tag "calendar_item[notes]", item.notes, form: form_id, rows: 2, class: "calendar-grid__textarea" %>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--edit">
                      <%= link_to edit_event_calendar_item_path(@event, item), class: "calendar-grid__edit" do %>
                        <span class="calendar-grid__edit-icon" aria-hidden="true">✎</span>
                        <span class="visually-hidden">Open full edit</span>
                      <% end %>
                    </td>
                    <td class="calendar-grid__cell calendar-grid__cell--actions">
                      <%= submit_tag "Save", form: form_id, class: "calendar-grid__save" %>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        <% else %>
          <div class="event-section__empty">
            <p>No items available yet.</p>
          </div>
        <% end %>
        <datalist id="calendar-grid-anchor-options">
          <% @anchor_options.each do |label, id| %>
            <option value="<%= label %>" data-anchor-id="<%= id %>"></option>
          <% end %>
        </datalist>
      </section>
    </div>
  </div>
<% end %>

<% content_for :scripts do %>
  <script type="module">
    document.addEventListener("DOMContentLoaded", () => {
      const form = document.getElementById("calendar-grid-bulk-form");
      if (!form) return;

      const actionSelect = form.querySelector("select[name='bulk[bulk_action]']");
      const statusRow = form.querySelector('[data-calendar-grid-bulk-target="status"]');
      const lockedRow = form.querySelector('[data-calendar-grid-bulk-target="locked"]');
      const tagsRow = form.querySelector('[data-calendar-grid-bulk-target="tags"]');

      const updateVisibility = () => {
        const action = actionSelect.value;
        if (statusRow) statusRow.style.display = action === "set_status" ? "flex" : "none";
        if (lockedRow) lockedRow.style.display = action === "set_locked" ? "flex" : "none";
        if (tagsRow) tagsRow.style.display = action === "add_tags" || action === "remove_tags" ? "flex" : "none";
      };

      if (actionSelect) {
        actionSelect.addEventListener("change", updateVisibility);
        updateVisibility();
      }
    });

    const anchorOptionsList = document.getElementById("calendar-grid-anchor-options");
    if (anchorOptionsList) {
      const options = Array.from(anchorOptionsList.options);

      const findOptionByValue = (value) => options.find((opt) => opt.value === value);

      document.querySelectorAll("[data-anchor-input]").forEach((input) => {
        const cell = input.closest("[data-anchor-cell]");
        const hiddenField = cell.querySelector("[data-anchor-hidden]");
        const clearButton = cell.querySelector("[data-anchor-clear]");
        const row = cell.parentElement;
        const relationCell = row.querySelector("[data-anchor-relation]");
        const controls = relationCell?.querySelector("[data-anchor-controls]");
        const alignment = relationCell?.querySelector("[data-anchor-alignment]");
        const offsetInput = relationCell?.querySelector("[data-anchor-offset]");
        const hint = relationCell?.querySelector("[data-anchor-hint]");

        const setState = (hasAnchor) => {
          if (controls) controls.style.display = hasAnchor ? "flex" : "none";
          if (alignment) {
            alignment.disabled = !hasAnchor;
            if (!hasAnchor) alignment.value = "after_start";
          }
          if (offsetInput) {
            offsetInput.disabled = !hasAnchor;
            if (!hasAnchor) offsetInput.value = 0;
          }
          if (hint) hint.style.display = hasAnchor ? "none" : "block";
          if (clearButton) clearButton.style.display = hasAnchor ? "inline-flex" : "none";
        };

        const applyValue = () => {
          const match = findOptionByValue(input.value.trim());
          if (match) {
            hiddenField.value = match.dataset.anchorId || "";
            setState(true);
          } else {
            hiddenField.value = "";
            input.value = "";
            setState(false);
          }
        };

        input.addEventListener("change", applyValue);
        input.addEventListener("blur", applyValue);

        if (clearButton) {
          clearButton.style.display = (hiddenField.value || "").length > 0 ? "inline-flex" : "none";
          clearButton.addEventListener("click", () => {
            input.value = "";
            hiddenField.value = "";
            setState(false);
          });
        }

        setState((hiddenField?.value || "").length > 0);
      });
    }

    document.querySelectorAll("[data-tags-container]").forEach((container) => {
      container.addEventListener("change", (event) => {
        const checkbox = event.target.closest(".calendar-grid__tag-checkbox");
        if (!checkbox) return;
        const pill = checkbox.closest(".calendar-grid__tag-pill");
        if (pill) {
          pill.classList.toggle("calendar-grid__tag-pill--selected", checkbox.checked);
        }
      });
    });

    const bulkPanel = document.querySelector("[data-bulk-panel]");
    const bulkCheckboxes = Array.from(document.querySelectorAll("[data-bulk-toggle]"));

    const updateBulkPanel = () => {
      if (!bulkPanel) return;
      const hasSelection = bulkCheckboxes.some((checkbox) => checkbox.checked);
      bulkPanel.style.display = hasSelection ? "block" : "none";
    };

    if (bulkPanel) {
      bulkPanel.style.display = "none";
    }

    bulkCheckboxes.forEach((checkbox) => {
      checkbox.addEventListener("change", updateBulkPanel);
    });

    updateBulkPanel();
  </script>
<% end %>
