<% form_url = item.persisted? ? event_calendar_item_path(@event, item) : event_calendar_items_path(@event) %>
<%= form_with model: item, url: form_url, class: "event-form", method: (item.persisted? ? :patch : :post) do |form| %>
  <% if item.errors.any? %>
    <div class="event-form__errors">
      <p><strong><%= pluralize(item.errors.count, "error") %> prevented this item from being saved:</strong></p>
      <ul>
        <% item.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="event-form__group">
    <%= form.label :title %>
    <%= form.text_field :title, required: true %>
  </div>

  <div class="event-form__group">
    <%= form.label :notes %>
    <%= form.text_area :notes, rows: 4 %>
  </div>

  <div class="event-form__row">
    <div class="event-form__group">
      <%= form.label :starts_at, "Absolute Start" %>
      <div class="calendar-item__datetime" data-calendar-all-day data-timezone="<%= @calendar.timezone %>">
        <div class="calendar-item__time-wrapper" style="display: <%= item.all_day? ? 'none' : 'block' %>;">
          <%= form.datetime_local_field :starts_at,
                value: item.starts_at&.in_time_zone(@calendar.timezone)&.strftime('%Y-%m-%dT%H:%M'),
                class: "calendar-item__time-field" %>
        </div>
        <div class="calendar-item__all-day-toggle">
          <%= form.check_box :all_day_mode, { checked: item.all_day?, class: "calendar-item__all-day-checkbox" }, "1", "0" %>
          <%= form.label :all_day_mode, "Treat as all-day" %>
        </div>
        <div class="calendar-item__all-day-date" style="display: <%= item.all_day? ? 'block' : 'none' %>;">
          <%= form.label :all_day_date, "All-day date" %>
          <%= form.date_field :all_day_date, value: item.starts_at&.in_time_zone(@calendar.timezone)&.to_date %>
        </div>
        <p class="event-section__note">Leave blank when using relative timing. Times shown in <%= @calendar.timezone %>.</p>
      </div>
    </div>
    <div class="event-form__group">
      <%= form.label :duration_minutes, "Duration (minutes)" %>
      <%= form.number_field :duration_minutes, min: 0 %>
    </div>
  </div>

  <div class="event-form__row">
    <div class="event-form__group">
      <%= form.label :relative_anchor_id, "Relative Anchor" %>
      <%= form.select :relative_anchor_id, options_for_select(@anchor_options, item.relative_anchor_id), { include_blank: "Absolute" }, class: "event-form__select" %>
    </div>
    <div class="event-form__group">
      <%= form.label :relative_offset_minutes, "Offset (minutes)" %>
      <%= form.number_field :relative_offset_minutes %>
    </div>
    <div class="event-form__group event-form__group--checkbox">
      <%= form.check_box :relative_before %>
      <%= form.label :relative_before, "Occurs before anchor" %>
    </div>
  </div>

  <div class="event-form__group event-form__group--checkbox">
    <%= form.check_box :relative_to_anchor_end %>
    <%= form.label :relative_to_anchor_end, "Anchor to the end of the selected item" %>
  </div>

  <div class="event-form__group event-form__group--checkbox">
    <%= form.check_box :locked %>
    <%= form.label :locked, "Lock start time" %>
  </div>

  <div class="event-form__group">
    <%= form.label :event_calendar_tag_ids, "Tags" %>
    <% if @available_tags.any? %>
      <% @available_tags.each do |tag| %>
        <% field_id = "calendar_item_tag_#{tag.id}" %>
        <div class="event-form__group event-form__group--checkbox">
          <%= check_box_tag "calendar_item[event_calendar_tag_ids][]", tag.id, item.event_calendar_tag_ids.include?(tag.id), id: field_id %>
          <%= label_tag field_id, tag.name %>
        </div>
      <% end %>
      <%= hidden_field_tag "calendar_item[event_calendar_tag_ids][]", "" %>
    <% else %>
      <p class="event-section__note">No tags yet. Add tags from the calendar overview.</p>
    <% end %>
  </div>

<div class="event-form__actions">
  <%= form.submit class: "event-form__submit" %>
  <%= link_to "Cancel", event_calendar_path(@event), class: "event-form__cancel" %>
</div>
<% end %>

<script>
  (function() {
    function ready(fn) {
      if (document.readyState !== "loading") {
        fn();
      } else {
        document.addEventListener("DOMContentLoaded", fn);
      }
      document.addEventListener("turbo:load", fn);
    }

    function initAllDay(container) {
      if (!container) return;

      var checkbox = container.querySelector(".calendar-item__all-day-checkbox");
      var timeWrapper = container.querySelector(".calendar-item__time-wrapper");
      var timeInput = container.querySelector(".calendar-item__time-field");
      var dateWrapper = container.querySelector(".calendar-item__all-day-date");
      var dateInput = container.querySelector("input[name='calendar_item[all_day_date]']");

      if (!checkbox || !timeInput || !dateInput) return;

      if (!timeInput.dataset.originalValue && timeInput.value) {
        timeInput.dataset.originalValue = timeInput.value;
      }

      function ensureDateValue() {
        if (dateInput.value) return dateInput.value;
        var base = (timeInput.value || new Date().toISOString()).slice(0, 10);
        dateInput.value = base;
        return base;
      }

      function setAllDay(state) {
        if (state) {
          timeWrapper.style.display = "none";
          dateWrapper.style.display = "block";
          var datePart = ensureDateValue();
          timeInput.dataset.originalValue = timeInput.dataset.originalValue || (timeInput.value || "");
          timeInput.value = datePart + "T00:00";
        } else {
          timeWrapper.style.display = "block";
          dateWrapper.style.display = "none";
          if (timeInput.dataset.originalValue) {
            timeInput.value = timeInput.dataset.originalValue;
          }
        }
      }

      checkbox.addEventListener("change", function(event) {
        setAllDay(event.target.checked);
      });

      dateInput.addEventListener("change", function() {
        if (!checkbox.checked) return;
        var datePart = dateInput.value || ensureDateValue();
        timeInput.value = datePart + "T00:00";
      });

      setAllDay(checkbox.checked);
    }

    ready(function() {
      document.querySelectorAll('[data-calendar-all-day]').forEach(initAllDay);
    });
  })();
</script>
